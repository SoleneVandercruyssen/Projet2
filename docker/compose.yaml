services:
# chaque container est un service
  web:
  # build permet de construire un container depuis un dockerfile
    build: .
  # Indique qu'il doit attendre que le service "bdd" soit lancé avant de se lancer lui même.
    depends_on:
      - bddsql
      - bddnosql
  # On indique les ports qui doivent être ouverts
    ports:
      - "8084:80"
  # On indique notre bind mount
    volumes:
      - .:/var/www/html
  # On peut ajouter des variables d'environnement
    environment: 
      - ALLOW_OVERRIDE=true
      - DB_HOST=bddsql
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=Quanticode
      - MA_MOYENNE_VARIABLE=bidule
    container_name: Quanticode
        # Permet de relancer le container si il s'arrête
    restart: always
    
  bddsql:
  # On peut aussi lancer un service depuis une image
    image: mariadb
    ports:
      - "3304:3306"
    # Parfois certaines images demandent de paramètrer des variables d'environnement spécifiques.
    environment:
      - MARIADB_ROOT_PASSWORD=root
      - ALLOW_OVERRIDE=true
      - DB_HOST=bddsql
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=quanticode
    container_name: serverMariaDB2025
    restart: always
    
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8093:80"
    container_name: serverPHPMyAdmin2025
    restart: unless-stopped
    depends_on:
      - bddsql
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}

    bddnosql:
  image: mongo
  ports:
    - "27017:27017"
  container_name: serverMongoDB2025
  restart: always
